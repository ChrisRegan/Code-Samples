

local messages = {}


local function shuffle(self)
	local shuffledTable = {}
	while #self.spawnColorList > 0 do
		local rand = math.random(#self.spawnColorList)
		local color = self.spawnColorList[rand]
		table.insert(shuffledTable, color)
		table.remove(self.spawnColorList, rand)
	end
	return shuffledTable
end

local function NewColor (self, message_id, message, sender)
	local color = table.remove(self.spawnColorList)
	msg.post("#tileSprite", "play_animation", {id = hash(color)})
	msg.post("/Game Field#main", "NewColor", {color})
end


function init(self)
	self.spawnColorList = {"BlueTile", "GreenTile", "PurpleTile", "RedTile", "YellowTile"}
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	self.spawnColorList = shuffle(self)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed

	pprint(message_id)
	if message_id == hash("New Color") then

		NewColor(self, message_id, message, sender)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
